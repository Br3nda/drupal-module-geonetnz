<?php

define('GEONETNZ_ENDPOINT', 'http://magma.geonet.org.nz/services/quake/quakeml/1.0.1/query');
/**
 * Examples of QuakeML queries
http://www.geonet.org.nz/resources/earthquake/quake-web-services.html
Earthquake information for the specified reference number 2737452:

http://magma.geonet.org.nz/services/quake/quakeml/1.0.1/query?externalRef=2737452

Earthquakes that occurred between the dates 2007-05-17 and 2007-05-18 (inclusive):

http://magma.geonet.org.nz/services/quake/quakeml/1.0.1/query?startDate=2007-05-17&endDate=2007-05-18

Earthquakes that occurred between 10:00 on 2008-08-01 and 10:30 on 2008-08-01:

http://magma.geonet.org.nz/services/quake/quakeml/1.0.1/query?startDate=2008-08-01T10:00:00&endDate=2008-08-01T10:30:00

Earthquakes that occurred between 10:00 on 2008-08-01 and 10:30 on 2008-08-01, together with picks, arrivals, amplitudes and magnitudes:

http://magma.geonet.org.nz/services/quake/quakeml/1.0.1/query?startDate=2008-08-01T10:00:00&endDate=2008-08-01T10:30:00&includePicksAndArrivals=true&includeAmplitudesAndStationMagnitudes=true&includeMultipleMagnitudes=true

Earthquakes that occurred between the dates 2007-05-17 and 2007-05-19 inclusive, within the bounding box latLower=-45, latUpper=-40, longLower=173, longUpper=176 of magnitude up to 7.5 that occurred up to 180 km depth with at least 5 phases recorded and at least 5 stations and with a standard error maximum of 0.15 seconds:

http://magma.geonet.org.nz/services/quake/quakeml/1.0.1/query?startDate=2007-05-17&endDate=2007-05-18&latLower=-45&latUpper=-40&longLower=173&longUpper=176&depthLower=0&depthUpper=180&magnitudeLower=0&magnitudeUpper=7.5&stationsLower=5&phasesLower=5&errorUpper=0.15
*/
function geonetnz_do_search($params) {
  $results = array();

  //http://drupal/geonetnz?display=timemap&startDate=1920-09-04&endDate=1925-10-04&latLower=&latUpper=&longLower=&longUpper=&depthLower=&depthUpper=&magnitudeLower=4&magnitudeUpper=&op=Search&search=Search&form_build_id=form-67f659a904666572f13471b1580414ec&form_id=geonetnz_search_form
  $url = GEONETNZ_ENDPOINT .'?';
  //startDate=2007-05-17&endDate=2007-05-18&latLower=-45&latUpper=-40&longLower=173&longUpper=176&depthLower=0&depthUpper=180&magnitudeLower=0&magnitudeUpper=7.5&
  foreach($params as $k=>$v) {
    if(!empty($v)) {
      $url .= urlencode($k) .'='. urlencode($v) .'&';
    }
  }
  drupal_set_message($url);
  $response = drupal_http_request($url);
      
  if ($response->code == 200) {
    $xml = new SimpleXMLElement($response->data);

    return $xml->eventParameters->event;
//     drupal_set_message(print_r($response, 1));
  }
  else {
      // Deal with HTTP errors
    switch ($response->code) {
      case 401:
        drupal_set_message(t('Geonet returned @error. Check your settings at <strong class="drupal_link_admin_settings"><a href="@settings-path">@menu-path</a></strong></strong>.', array(
          '@error' => 'HTTP '. $response->code .': '. $response->data,
          '@menu-path' => DIGITALNZ_SETTINGS_MENU_PATH,
          '@settings-path' => url(DIGITALNZ_SETTINGS_PATH),
        )), 'error');
        break;

      default:
        drupal_set_message(t('Geonet returned @error', array(
          '@error' => 'HTTP '. $response->code .': '. strip_tags($response->data),
        )), 'error');
        break;
    }
  }

  return $results;
}


function geonetnz_menu() {
  $items['geonetnz'] = array(
    'title' => t('Earthquake Search'),
    'page callback' => 'geonetnz_search_page',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function geonetnz_search_page($search_id=null) {
  $output = drupal_get_form('geonetnz_search_form');

  if (!isset($_GET['startDate']) || !isset($_GET['endDate'])) {
    return $output;
  }
  
  $startDate = $_GET['startDate'];
  if (!preg_match('!^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$!', $startDate)) {
    form_set_error('startDate', 'Invalid Start Date');
    return $output;
  }
  $endDate = $_GET['endDate'];
  if (!preg_match('!^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$!', $endDate)) {
    form_set_error('endDate', 'Invalid End Date');
    return $output;
  }

  if(isset($_GET['magnitudeLower'])) {
    $magnitudeLower = $_GET['magnitudeLower'];
    if (preg_match('![0-9+](\.[0-9+])$!', $magnitudeLower)) {
      form_set_error('magnitudeLower', t('Invalid Minimum Magnitude'));
      return $output;
    }
  }
  if(isset($_GET['magnitudeUpper'])) {
    $magnitudeUpper = $_GET['magnitudeUpper'];
    if (preg_match('![0-9+](\.[0-9+])$!', $magnitudeUpper)) {
      form_set_error('magnitudeUpper', t('Invalid Maximum Magnitude'));
      return $output;
    }
  }
  
  
  $results = geonetnz_do_search(array(
    'startDate' => $startDate,
    'endDate' => $endDate,
    'magnitudeLower' => $magnitudeLower,
    'magnitudeUpper' => $magnitudeUpper,
    )
  );

  $output .= geonetnz_search_results_table($results);
  return $output;
}

function geonetnz_search_results_table($results) {
  $headers = array(/*t('Type'), */t('Time'), t('Co-ords'), t('Nearby Places'), t('Depth'), t('Magnitude'));
//
//   $node = array();
  foreach($results as $r) {
// //     $node = _geonetnz_get_node($r);
//     drupal_write_record('geonet_search_results', $earthquake);
    $places_nearby = geonames_query(
      'nearby',
      array(
        'lat' => $r->origin->latitude->value,
        'lng' => $r->origin->longitude->value,
        'maxrows' => 3
      ),
      $options
    );
    $places = array();
     foreach($places_nearby->results as $p) {
       $places[] = $p['name'];
    }
    $rows[] = array(
      check_plain($r->type),
      check_plain($r->origin->time->value),
      t('@lat,@long', array('@lat' => $r->origin->latitude->value, '@long' => $r->origin->longitude->value)),
      check_plain(implode($places, ', ')),
      t('@depth km', array('@depth' => $r->origin->depth->value)),
      check_plain($r->magnitude->mag->value),
    );
  }
  $output .= theme('table', $headers, $rows);  
  return $output;
}

function geonetnz_search_form($form_state) {  
  $form['dates'] = array(
    '#type' => 'fieldset',
    '#title' => t('Date Range'),
    '#collapsed' => FALSE,
    '#collapsible' => TRUE,
  );
  $form['dates']['startDate'] = array(
    '#type' => 'textfield',
    '#title' => t('Start Date (UTC)'),
    '#description' => t('e.g. 2007-05-17. format is yyyy-mm-ddThh:MM:ss and times are in UTC (GMT)'),
    '#default_value' => isset($_GET['startDate']) ? $_GET['startDate'] : '2010-09-04',
    '#required' => TRUE,
  );
  $form['dates']['endDate'] = array(
    '#type' => 'textfield',
    '#title' => t('End Date (UTC)'),
    '#description' => t('e.g. 2007-05-17. format is yyyy-mm-ddThh:MM:ss and times are in UTC (GMT)'),
    '#default_value' => isset($_GET['endDate']) ? $_GET['endDate'] : '2010-09-04',
    '#required' => TRUE,
  );
  $form['geo'] = array(
    '#type' => 'fieldset',
    '#title' => t('Geo Co-ordinates'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['geo']['latLower'] = array(
    '#type' => 'textfield',
    '#title' => t('Latitude'),
    '#description' => t('e.g. 2007-05-17. '),
  );
  $form['geo']['latUpper'] = array(
    '#type' => 'textfield',
    '#title' => t('to Latitude'),
    '#description' => t('e.g. 2007-05-17'),
  );
  $form['geo']['longLower'] = array(
    '#type' => 'textfield',
    '#title' => t('Longitude'),
    '#description' => t('e.g. 2007-05-17'),
  );
  $form['geo']['longUpper'] = array(
    '#type' => 'textfield',
    '#title' => t('to Longitude'),
    '#description' => t('e.g. 2007-05-17'),
  );
  $form['depth'] = array(
    '#type' => 'fieldset',
    '#title' => t('Depth'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['depth']['depthLower'] = array(
    '#type' => 'textfield',
    '#title' => t('Minimum Depth'),
    '#description' => t('e.g. 2007-05-17'),
  );
  $form['depth']['depthUpper'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum Depth'),
    '#description' => t('e.g. 2007-05-17'),
  );
  $form['magnitude'] = array(
    '#type' => 'fieldset',
    '#title' => t('Magnitude'),
    '#collapsible' => TRUE,
    '#collapsed' => !(isset($_GET['magnitudeLower']) || isset($_GET['magnitudeUpper'])),
  );
  $form['magnitude']['magnitudeLower'] = array(
    '#type' => 'textfield',
    '#title' => t('Minimum Magnitude'),
    '#description' => t('e.g. 2007-05-17'),
    '#default_value' => isset($_GET['magnitudeLower']) ? $_GET['magnitudeLower'] : '',
  );
  $form['magnitude']['magnitudeUpper'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum Magnitude'),
    '#description' => t('e.g. 2007-05-17'),
    '#default_value' => isset($_GET['magnitudeUpper']) ? $_GET['magnitudeUpper'] : '',
  );
  $form['search'] = array(
    '#value' => t('Search'),
    '#type' => 'submit',
  );
  return $form;
}
function geonetnz_search_form_submit($form_id, $form_state) {
  drupal_goto('geonetnz', $form_state['values']);
}

